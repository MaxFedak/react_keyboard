{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleKeyPress","e","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,EAaEC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEH,WAAYE,EAAEE,OAdlC,uDAKE,WACEC,SAASC,iBAAiB,UAAWC,KAAKN,kBAN9C,kCASE,WACEI,SAASG,oBAAoB,UAAWD,KAAKN,kBAVjD,oBAiBE,WACE,OACEM,KAAKR,MAAMC,WACP,mBAAGS,UAAU,eAAb,4CAAyDF,KAAKR,MAAMC,WAApE,OACA,mBAAGS,UAAU,eAAb,yCArBV,GAAyBC,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.842ca90c.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyPress);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyPress);\n  }\n\n  handleKeyPress = (e: KeyboardEvent) => {\n    this.setState({ pressedKey: e.key });\n  };\n\n  render() {\n    return (\n      this.state.pressedKey\n        ? <p className=\"App__message\">{`The last pressed key is [${this.state.pressedKey}]`}</p>\n        : <p className=\"App__message\">Nothing was pressed yet</p>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}